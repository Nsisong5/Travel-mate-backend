"""added hasbudget column to trip

Revision ID: bf751b7f8809
Revises: d4715c1268d9
Create Date: 2025-09-13 09:42:28.094845

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bf751b7f8809'
down_revision: Union[str, None] = 'd4715c1268d9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_expenses_id'), table_name='expenses')
    op.drop_table('expenses')
    op.drop_index(op.f('ix_budgets_id'), table_name='budgets')
    op.drop_table('budgets')
    op.drop_index(op.f('ix_budget_allocations_id'), table_name='budget_allocations')
    op.drop_table('budget_allocations')
    op.drop_index(op.f('ix_destinations_id'), table_name='destinations')
    op.drop_table('destinations')
    op.add_column('trips', sa.Column('tag_name', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('trips', 'tag_name')
    op.create_table('destinations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('country', sa.VARCHAR(length=100), nullable=False),
    sa.Column('country_code', sa.VARCHAR(length=5), nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), nullable=False),
    sa.Column('budget', sa.VARCHAR(length=50), nullable=False),
    sa.Column('image_url', sa.TEXT(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_destinations_id'), 'destinations', ['id'], unique=False)
    op.create_table('budget_allocations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('budget_id', sa.INTEGER(), nullable=True),
    sa.Column('category', sa.VARCHAR(), nullable=False),
    sa.Column('allocated', sa.FLOAT(), nullable=False),
    sa.Column('spent', sa.FLOAT(), nullable=True),
    sa.Column('icon_name', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['budget_id'], ['budgets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_budget_allocations_id'), 'budget_allocations', ['id'], unique=False)
    op.create_table('budgets',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('trip_id', sa.INTEGER(), nullable=True),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('period', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('yearly_budget_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['yearly_budget_id'], ['yearly_budget.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_budgets_id'), 'budgets', ['id'], unique=False)
    op.create_table('expenses',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('budget_id', sa.INTEGER(), nullable=True),
    sa.Column('trip_id', sa.INTEGER(), nullable=True),
    sa.Column('category', sa.VARCHAR(), nullable=False),
    sa.Column('category_name', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('is_planned', sa.BOOLEAN(), nullable=True),
    sa.Column('date', sa.DATETIME(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['budget_id'], ['budgets.id'], ),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_expenses_id'), 'expenses', ['id'], unique=False)
    # ### end Alembic commands ###
